---
date: 2014-02-02
title: github yoink
tags: posts
---

- full_doc = 'https://github.com/adamwong246/adamwong246.github.io/blob/middleman/source/about_me/resumes/resume.pdf.slim'
- one_line = 'https://github.com/adamwong246/adamwong246.github.io/blob/middleman/source/about_me/resumes/resume.pdf.slim#L1'
- block = 'https://github.com/adamwong246/adamwong246.github.io/blob/middleman/source/about_me/resumes/resume.pdf.slim#L1#L8'
p
  | I made a neat thing today which I call 'github-yoink' and which generates a block of code from a url to gihub. 

p
  | Because my app is so tightly wed to github, I often want to link to my own source code. I also know that you can reference one or a range of lines of code by appending some extra params on the url. You can link to an entire document 

  a href="full_doc" = full_doc.split('/').last

  |,  a line in a document 

  a href="one_line" = one_line.split('/').last

  |, or a block of code. 

  a href="block" = block.split('/').last 

p
  | github-yoink takes this a step further- when Middleman compiles the page, the page is Get'ted, parsed and then syntax highlighted. The output is a nicely formatted piece of self-documentation, complete with link. 

= partial('partials/gh_yoink', locals: {link: full_doc}) 
= partial('partials/gh_yoink', locals: {link: one_line}) 
= partial('partials/gh_yoink', locals: {link: block}) 

p
  | That's sort of meta but *we need to go deeper.* Let's use this technique on itself.

= partial('partials/gh_yoink', locals: {link: 'https://github.com/adamwong246/adamwong246.github.io/blob/middleman/source/partials/gh_yoink.html.slim'}) 

p
  | How cool is that? Notice how this isn't a helper method, it's a partial!  You call it like this (in slim)...

- code('ruby') do
  | = partial('partials/gh_yoink', locals: {link: 'https://github.com/adamwong246/adamwong246.github.io/blob/middleman/source/about_me/resumes/resume.pdf.slim'})

p
  | I've said it before and I'll say it again: Helper methods are for suckers. Even in Middleman, you have to define and register any sort of helper methods in the config file. What a hassle! Meanwhile, partials make great method substitutes.

