<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/blog</id>
  <link href="http://blog.url.com/blog"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-01-21T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>status update</title>
    <link rel="alternate" href="http://blog.url.com/blog/2014/01/21/status-update.html"/>
    <id>http://blog.url.com/blog/2014/01/21/status-update.html</id>
    <published>2014-01-21T00:00:00Z</published>
    <updated>2014-01-21T18:59:06-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I'm very happy with the progress I've made on my blog. There's a new responsive layout with a google web font- just enough flair to make your web page pop without too much weight.  Not that I couldn't have used a CSS framework. I have in the past used Bootstrap and to excellent effect. But this go round, I've decided lightweight is best. So that means no css frameworks, no js and no database- all plain old html… for now.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>horse of a different color</title>
    <link rel="alternate" href="http://blog.url.com/blog/2014/01/21/horse-of-a-different-color.html"/>
    <id>http://blog.url.com/blog/2014/01/21/horse-of-a-different-color.html</id>
    <published>2014-01-21T00:00:00Z</published>
    <updated>2014-01-21T19:16:21-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">This is an experiment in colors. By assigning elements colors and then rotating them in color space, you can maintain a pleasant, changing, color scheme</content>
  </entry>
  <entry>
    <title>Switch to Middleman</title>
    <link rel="alternate" href="http://blog.url.com/blog/2014/01/10/switch-to-middleman.html"/>
    <id>http://blog.url.com/blog/2014/01/10/switch-to-middleman.html</id>
    <published>2014-01-10T00:00:00Z</published>
    <updated>2014-01-21T18:33:49-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I finally made the switch to middleman. Jekyll was far too restrictive for my purposes, though I appreciate it's simplicity. If you need to get a blog up in 10 minutes, that's awesome. If you just want to generate content, even better. Jekyll will suit you fine. But I needed and wanted something more powerful. Jekyll is hobbled by the choice of liquid templating. Sure, it keeps it simple but liquid templating was not made for this task. Liquid templating should be used when you want to execute &lt;em&gt;user&lt;/em&gt; written templates. The logic is restrictive is to keep you, the executor of said code, safe and for the same reason you'd never eval some user submitted code. But in this use case, &lt;em&gt;I&lt;/em&gt; am the user. I can trust my own code. Which leads me to… I want to use Slim. I &lt;em&gt;love&lt;/em&gt; Slim.  it's faster and less verbose than haml AND it has embedded markdown languages. And by ditching Liquid, you get complete control. Write any ruby code, in any templating and/or markdown language you choose! &lt;/p&gt;

&lt;p&gt;Middleman also has one more huge advantage: you can build any website with Middleman, while Jekyll is pretty much only designed to be blog. Like I said before, that simplicity is great for some but by investing a little time with Middleman, you won't ever write raw HTML ever again, for any project. I know I won't! &lt;/p&gt;

&lt;p&gt;Middleman updates each page individually and quite seamlessly. Jekyll was really slow in this regard but Middleman updates a page just as fast as I can save the document I'm working on and switching to the browser. It even reloads the page!&lt;/p&gt;

&lt;p&gt;The switch was a piece of cake. I had to simply copy the files into another branch of the repo, update the rakefile and that was pretty much it. &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Syntax Highlighting in Middleman 1</title>
    <link rel="alternate" href="http://blog.url.com/blog/2014/01/07/syntax-highlighting-in-middleman-1.html"/>
    <id>http://blog.url.com/blog/2014/01/07/syntax-highlighting-in-middleman-1.html</id>
    <published>2014-01-07T00:00:00Z</published>
    <updated>2014-01-21T18:33:49-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h4&gt;Html&lt;/h4&gt;&lt;div class="codehilite html"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;pre class="lineno"&gt;2&lt;/pre&gt;&lt;pre class="lineno"&gt;3&lt;/pre&gt;&lt;pre class="lineno"&gt;4&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"field"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"basic-input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Basic Input Label&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"basic-input"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"basic-input"&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;"40"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Placeholder Text"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;h4&gt;Ruby&lt;/h4&gt;&lt;div class="codehilite ruby"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;pre class="lineno"&gt;2&lt;/pre&gt;&lt;pre class="lineno"&gt;3&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"baz"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;h4&gt;Whatever&lt;/h4&gt;&lt;div class="codehilite plaintext"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;This is some code&lt;span class="w"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Syntax Highlighting in Middleman</title>
    <link rel="alternate" href="http://blog.url.com/blog/2014/01/07/syntax-highlighting-in-middleman.html"/>
    <id>http://blog.url.com/blog/2014/01/07/syntax-highlighting-in-middleman.html</id>
    <published>2014-01-07T00:00:00Z</published>
    <updated>2014-01-21T18:33:49-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;pre&gt;&lt;code&gt;
  // create a panel using a GridBagLayout
  JPanel panel = new JPanel (new GridBagLayout());

  // three labels on the first row
  panel.add (new JLabel ("One"));
  panel.add (new JLabel ("Two"));
  panel.add (new JLabel ("Threeeee"));
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;

  // create a panel using a GridBagLayout
  JPanel panel = new JPanel (new GridBagLayout());

  // three labels on the first row
  panel.add (new JLabel ("One"));
  panel.add (new JLabel ("Two"));
  panel.add (new JLabel ("Threeeee"));
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;
  // create a panel using a gridbaglayout
  jpanel panel = new jpanel (new gridbaglayout());

  // three labels on the first row
  panel.add (new jlabel ("one"));
  panel.add (new jlabel ("two"));
  panel.add (new jlabel ("threeeee"));
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Flexbox Experiment</title>
    <link rel="alternate" href="http://blog.url.com/blog/2014/01/01/flexbox-experiment.html"/>
    <id>http://blog.url.com/blog/2014/01/01/flexbox-experiment.html</id>
    <published>2014-01-01T00:00:00Z</published>
    <updated>2014-01-21T18:33:49-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;style type="text/css"&gt;.Grid {
  display: flex;
}

.Grid-cell {
  flex: 1;
}
/* Base classes for all media */
.Grid--fit &gt; .Grid-cell {
  flex: 1;
}
.Grid--full &gt; .Grid-cell {
  flex: 0 0 100%;
}
.Grid--1of2 &gt; .Grid-cell {
  flex: 0 0 50%
}
.Grid--1of3 &gt; .Grid-cell {
  flex: 0 0 33.3333%
}
.Grid--1of4 &gt; .Grid-cell {
  flex: 0 0 25%
}

/* Base classes for all media */
.Grid--fit &gt; .Grid-cell {
  flex: 1;
}
.Grid--full &gt; .Grid-cell {
  flex: 0 0 100%;
}
.Grid--1of2 &gt; .Grid-cell {
  flex: 0 0 50%
}
.Grid--1of3 &gt; .Grid-cell {
  flex: 0 0 33.3333%
}
.Grid--1of4 &gt; .Grid-cell {
  flex: 0 0 25%
}

/* Small to medium screens */
@media (min-width: 24em) {
  .small-Grid--fit &gt; .Grid-cell {
    flex: 1;
  }
  .small-Grid--full &gt; .Grid-cell {
    flex: 0 0 100%;
  }
  .small-Grid--1of2 &gt; .Grid-cell {
    flex: 0 0 50%
  }
  .small-Grid--1of3 &gt; .Grid-cell {
    flex: 0 0 33.3333%
  }
  .small-Grid--1of4 &gt; .Grid-cell {
    flex: 0 0 25%
  }
}

/* Large screens */
@media (min-width: 48em) {
  .large-Grid--fit &gt; .Grid-cell {
    flex: 1;
  }
  .large-Grid--full &gt; .Grid-cell {
    flex: 0 0 100%;
  }
  .large-Grid--1of2 &gt; .Grid-cell {
    flex: 0 0 50%
  }
  .large-Grid--1of3 &gt; .Grid-cell {
    flex: 0 0 33.3333%
  }
  .large-Grid--1of4 &gt; .Grid-cell {
    flex: 0 0 25%
  }
}&lt;/style&gt;&lt;div class="Grid"&gt;&lt;Grid-cell&gt;Conlecto concisuralis confundo electrophi stantiti. Calerarium ebriegentiae atocinthinum. Prosellantius cinemanis dealbamentium. Decas vapulsi descussum laurare ancitator. Intus praefica adgnomivi turgaminis saturatere commilitionis. Obtrumplex pratuli inpagino carnularum inno circumptiva conventatio. Amissare inoffamentula corui adclinea. Admoniaceum cariacis achema diffusio. Arispatio quaesilitationis infrenditoris consoli. Arunnius confessime damnausi trigilitationis laesors represum.&lt;/Grid-cell&gt;&lt;Grid-cell&gt;Imprompadatus teloto anquiparator persumplicius inscendiose indica infrascalpii. Scrutavi pyrriger adrepticius. Collescentum deculi hexas complicus. Oporiathinus cithalalgica assersatus. Equivere adfuscui erucussum indisequum infamentum. Destructussum melonitus fidicidii scutatritatis poteneum. Bonituor injectoris conflagium dirabitata coli. Deflocare necessare fusculatica. Chenebractus oractea garunctoris strum perpluenti nudicator. Praefolicaris adsentor adflictorismus.&lt;/Grid-cell&gt;&lt;Grid-cell&gt;Auculavi commoris laetulanum. Robbatorissime carbatus debucursoris attentius. Spiractus scotum capellaminii. Aviculare ligetare violeta dactamen inaesternitatis chiliriticum. Convar filica machanotro marxianita. Obedivius depaedratus chirurgus inrasus. Bibilitoria aspirationis mythophllus. Volta indeo genigena careus occesimabilis coenatio. Astruelium affirmari ordinatus physiculi. Compara anulter dissaeps redolefectrua crusapiare.&lt;/Grid-cell&gt;&lt;/div&gt;</content>
  </entry>
</feed>
