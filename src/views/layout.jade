doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    meta(name='HandheldFriendly', content='True')
    meta(name='MobileOptimized', content='320')
    meta(name='viewport', content='width=device-width, minimum-scale=1.0, maximum-scale=1.0')
    link(href='/style.css', rel='stylesheet', type="text/css")
    block pageTitle
      title= package.name
    script.
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-47887894-1', 'auto');
      ga('send', 'pageview');
    script.
      window.addEventListener('DOMContentLoaded', (event) => {
        console.log('DOM fully loaded and parsed');
        
        // Initial state
        var scrollPos = 0;  
        window.addEventListener('scroll', function(){
          // detects new state and compares it with the new one
          if ((document.body.getBoundingClientRect()).top > scrollPos)
        		document.body.classList.remove("hide-menu");
            
        	else
        		document.body.classList.add("hide-menu");
            
        	// saves the new position for iteration.
        	scrollPos = (document.body.getBoundingClientRect()).top;
        });

        // Select the button
        const btn = document.querySelector(".dark-toggle");
        // Check for dark mode preference at the OS level
        const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");
        â€¨
        // Get the user's theme preference from local storage, if it's available
        const currentTheme = localStorage.getItem("theme");
        // If the user's preference in localStorage is dark...
        if (currentTheme === "dark") {
          // ...let's toggle the .dark-theme class on the body
          document.body.classList.toggle("dark-theme");
        // Otherwise, if the user's preference in localStorage is light...
        } else {
          // ...let's toggle the .light-theme class on the body
          document.body.classList.toggle("light-theme");
        }        
      });

      function toggleDark() {
        
        // Get the user's theme preference from local storage, if it's available
        const currentTheme = localStorage.getItem("theme");
        
        // If the user's preference in localStorage is dark...
        if (currentTheme === "dark") {
          document.body.classList.remove("dark-theme");
          localStorage.setItem("theme", "light")

        } else {
          document.body.classList.add("dark-theme");
          localStorage.setItem("theme", "dark")
        }
      }
      
      function openMenu() {
          document.body.classList.toggle("closed-menu");
      }
      
    link(rel="icon"  type="image/png"  href="/favicon.png")
  body.closed-menu()
    #main-container


      nav
        #site-title
          h3
            img(src="/favicon.png" onClick="openMenu()")
            a(href='/') adamwong246.github.io
        #menu  
          ul
            li
              h4
                a(href='/aboutMe/index.html') About me
            li
              h4
                a(href="/resume.html") resume.html
                |, 
                a(href="/resume.pdf") pdf
                |, 
                a(href="/resume.md") md
            li
              h4 #[a(href='/sideprojects/index.html') Side projects]
            li
              h4
                a(href='/blog/index.html') Blog entries
            - for entry in blogEntries.slice(0, 1)
              li
                h4
                  |Latest entry:
                  a(href=entry.url)
                    = entry.meta.title


      main
        block content

    footer
      span #[button.dark-toggle(onClick="toggleDark()") darkmode]
      br
      span
        |v#{package.version} #[a(href=package.repository.url) github] #[a(href='/LICENSE.txt') LICENSE] #[a(href="/README.md") README]
